---
title: "Chapter 6 - Sample Size Calculation and Study Design"
---

## Slides

Lecture slides [here](chap6.html){target="_blank"}. (To convert html to pdf, press E $\to$ Print $\to$ Destination: Save to pdf)


## R code

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| eval: false

###############################################################################
# Chapter 6 R Code
#
# This script reproduces all major numerical results in Chapter 6, including:
#   1. Functions for sample size calculations (psi_fun, zeta_fun)
#   2. Numerical examples from Section 6.2.2
#   3. Sample size computations for the GBC pilot data
###############################################################################


#==============================================================================
# (A) Functions Needed for Sample Size Calculation
#==============================================================================

#------------------------------------------------------------------------------
# 1. psi_fun(lambda0, lambdaL, b, c)
#    Computes the event proportion psi for Cox model sample size
#
#    Inputs:
#       lambda0 = hazard rate for T
#       lambdaL = hazard rate for LTFU
#       b       = length of accrual (years)
#       c       = additional length of follow-up (years)
#------------------------------------------------------------------------------
psi_fun <- function(lambda0, lambdaL, b, c) {
  lambda <- lambda0 + lambdaL
  psi <- lambda0 / lambda * (
    1 - exp(-lambda * c) * (1 - exp(-lambda * b)) / (lambda * b)
  )
  return(psi)
}


#------------------------------------------------------------------------------
# 2. zeta_fun(tau, lambda0, lambdaL, b, c)
#    Computes the variance component for RMST sample size via numerical integral
#
#    Inputs:
#       tau     = restricting time
#       lambda0 = hazard rate for T
#       lambdaL = hazard rate for LTFU
#       b       = length of accrual (years)
#       c       = additional follow-up (years)
#------------------------------------------------------------------------------

# Survival function for censoring
Gfun <- function(t, lambdaL, b, c) {
  Gt <- ifelse(
    t <= c,
    exp(-lambdaL * t),
    ifelse(
      t < (c + b),
      exp(-lambdaL * t) * (b + c - t) / b,
      0
    )
  )
  return(Gt)
}

# The integrand for zeta
zeta_integrand <- function(t, tau, lambda0, lambdaL, b, c) {
  integrand <- (exp(-lambda0 * t) - exp(-lambda0 * tau))^2 *
    exp(lambda0 * t) / (Gfun(t, lambdaL, b, c) * lambda0)
  return(integrand)
}

# Main function using integrate()
zeta_fun <- function(tau, lambda0, lambdaL, b, c) {
  f <- function(t) {
    zeta_integrand(t, tau, lambda0, lambdaL, b, c)
  }
  zeta <- integrate(f, lower = 0, upper = tau)
  return(zeta$value)
}


#==============================================================================
# (B) Numerical Results in Section 6.2.2
#==============================================================================

# Evaluate zeta_fun at specific values
zeta_fun(tau = 5, lambda0 = 0.2, lambdaL = 0.01, b = 2, c = 4)


#==============================================================================
# (C) Sample Size Calculation Example with GBC Data
#==============================================================================
library(survival)

#------------------------------------------------------------------------------
# 1. Read GBC Data
#------------------------------------------------------------------------------
gbc <- read.table("Data//German Breast Cancer Study//gbc.txt")

# Sort the data by time within each id
o   <- order(gbc$id, gbc$time)
gbc <- gbc[o, ]

# Keep the first row for each id
df <- gbc[!duplicated(gbc$id), ]

# Set status = 1 if status == 1 or 2
df$status <- (df$status > 0) + 0

# Subset: post-menopausal (meno==2) & no hormonal treatment (hormone==1)
pilot <- df[df$meno == 2 & df$hormone == 1, ]
n <- nrow(pilot)  # n = 209, matches Table 1.12 (Chapter 1)

#------------------------------------------------------------------------------
# 2. Estimate Baseline Hazard and Setup
#------------------------------------------------------------------------------
pilot$time <- pilot$time / 12  # convert months to years
lambda0 <- sum(pilot$status > 0) / sum(pilot$time)  # ~0.174

# Accrual (b = 2 years), follow-up (c = 3.5 years)
lambdaL <- 0.01  # LTFU rate
b <- 2
c <- 3.5

# Compute psi and zeta at tau = 3, 5
psi <- psi_fun(lambda0, lambdaL, b, c)
zeta3 <- zeta_fun(tau = 3, lambda0, lambdaL, b, c)
zeta5 <- zeta_fun(tau = 5, lambda0, lambdaL, b, c)

#------------------------------------------------------------------------------
# 3. Sample Size Computations for Various Hazard Ratios
#------------------------------------------------------------------------------
HR <- seq(0.6, 0.9, by = 0.01)  # hazard ratio range
lambda1 <- lambda0 * HR

# Function for difference in RMST (exponential assumption)
RMST_diff <- function(tau, lam0, lam1) {
  val <- (1 - exp(-lam1 * tau)) / lam1 - (1 - exp(-lam0 * tau)) / lam0
  return(val)
}

# For tau = 3 and tau = 5
theta3 <- RMST_diff(3, lambda0, lambda1)
theta5 <- RMST_diff(5, lambda0, lambda1)

# Setup for alpha = 0.05 (two-sided), power = 0.8 or 0.9
q <- 0.5
za <- qnorm(0.975)
gamma_list <- c(0.80, 0.90)

par(mfrow = c(1, 2))
for (i in seq_along(gamma_list)) {
  gamma <- gamma_list[i]
  zg <- qnorm(gamma)
  
  # Sample sizes for log-rank, 3-RMST, and 5-RMST
  ncox    <- (za + zg)^2 / (q * (1 - q) * psi * (log(HR))^2)
  nRMST3  <- zeta3 * (za + zg)^2 / (q * (1 - q) * theta3^2)
  nRMST5  <- zeta5 * (za + zg)^2 / (q * (1 - q) * theta5^2)
  
  plot(
    HR, ncox,
    type = "l",
    lwd  = 2,
    ylim = c(0, 7000),
    xlab = "Hazard ratio",
    ylab = "Sample size",
    main = paste0("Power = ", gamma),
    cex.lab  = 1.2,
    cex.axis = 1.2
  )
  lines(HR, nRMST5, lty = 2, lwd = 2)
  lines(HR, nRMST3, lty = 3, lwd = 2)
  legend(
    "topleft",
    lty = 1:3,
    c("Log-rank", "5-RMST", "3-RMST"),
    lwd = 2,
    cex = 1.2
  )
}


#==============================================================================
# (D) Demonstration with npsurvSS Package (Yung and Liu, 2020)
#==============================================================================
library(npsurvSS)

#------------------------------------------------------------------------------
# 1. Configure Two Arms (Control vs. Treatment)
#------------------------------------------------------------------------------
lambda0 <- 0.173  # baseline event hazard
lambdaL <- 0.01   # hazard rate for LTFU

control <- create_arm(
  size       = 500,
  accr_time  = 2,
  follow_time= 3.5,
  surv_scale = lambda0,
  surv_shape = 1,   # default
  loss_scale = lambdaL,
  loss_shape = 1
)

lambda1 <- lambda0 * 0.8

treatment <- create_arm(
  size       = 500,
  accr_time  = 2,
  follow_time= 3.5,
  surv_scale = lambda1,
  loss_scale = lambdaL
)

#------------------------------------------------------------------------------
# 2. Compare Required Sample Sizes for Several Tests
#------------------------------------------------------------------------------
size_two_arm(
  control,
  treatment,
  test = list(
    list(test = "weighted logrank"),               # Log-rank test
    list(test = "rmst difference", milestone = 3), # RMST at 3 years
    list(test = "rmst difference", milestone = 5)  # RMST at 5 years
  )
)

# Alternatively, power calculations could be done via power_two_arm()
# power_two_arm(control, treatment)

```

